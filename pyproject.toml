[tool.poetry]
name = "license-markdown-table"
version = "0.1.0"
description = "Gathers project dependencies and creates a markdown table with license information for each package."
authors = ["szmyty <szmyty@gmail.com>"]
repository = "https://github.com/szmyty/license-markdown-table"
readme = "README.md"
keywords = ["license", "markdown"]

[tool.poetry.dependencies]
python = "^3.10"
prettytable = "^3.3.0"
py-markdown-table = "^0.2.2"

[tool.poetry.dev-dependencies]
pytest = "^7.1.2"
isort = "^5.10.1"
black = "^22.3.0"
flake8 = "^4.0.1"
flake8-bugbear = "^22.4.25"
mypy = "^0.961"
coverage = "^6.4.1"
bandit = "^1.7.4"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
pythonpath = "."
addopts = "-ra"
testpaths = ["."]
log_cli = "True"

junit_family = "legacy"

[tool.black]
line-length = 88
target-version = ["py36", "py37", "py38", "py39"]
include_trailing_comma = false
include = '\.pyi?$'
exclude = '''
/(
    \.eggs          # exclude a few common directories in the
  | \.git           # root of the project
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations

  # The following are specific to Black, you probably don't want those.
  | blib2to3
  | tests/data
)/
'''

[tool.isort]
profile = "black"
skip = ["venv"]
balanced_wrapping = true
atomic = true
multi_line_output = 3
include_trailing_comma = false
force_grid_wrap = 0
use_parentheses = true
line_length = 88
import_heading_stdlib = 'Standard library imports'
import_heading_thirdparty = 'Third party imports'
import_heading_firstparty = 'Local application imports'
import_heading_localfolder = 'Local folder imports'

[tool.mypy]
mypy_path = "."
warn_no_return = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

[tool.coverage.run]
branch = true
command_line = '-m pytest'
source = ['./']

[tool.coverage.report]
precision = 2
skip_covered = true
fail_under = 90